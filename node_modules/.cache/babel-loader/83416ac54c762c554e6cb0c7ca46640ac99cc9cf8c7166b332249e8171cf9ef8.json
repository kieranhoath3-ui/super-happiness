{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Utils\\\\Moneh\\\\client\\\\src\\\\games\\\\MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 60px);\n  grid-gap: 10px;\n  margin: 20px auto;\n`;\n_c = Grid;\nconst Card = styled.button`\n  width: 60px;\n  height: 60px;\n  font-size: 2rem;\n  background: #fff;\n  border: 2px solid #2a3d66;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background 0.2s;\n  &:hover {\n    background: #e6eaf5;\n  }\n`;\n_c2 = Card;\nconst Status = styled.div`\n  margin: 10px 0;\n  font-size: 1.1rem;\n`;\n_c3 = Status;\nconst symbols = ['🍎', '🍌', '🍒', '🍇', '🍉', '🍋', '🍓', '🍍'];\nfunction shuffle(array) {\n  let arr = array.slice();\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\nconst MemoryGame = () => {\n  _s();\n  const [cards, setCards] = useState(() => shuffle([...symbols, ...symbols]));\n  const [flipped, setFlipped] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [moves, setMoves] = useState(0);\n  function handleClick(idx) {\n    if (flipped.length === 2 || flipped.includes(idx) || matched.includes(idx)) return;\n    const newFlipped = [...flipped, idx];\n    setFlipped(newFlipped);\n    if (newFlipped.length === 2) {\n      setMoves(m => m + 1);\n      const [i, j] = newFlipped;\n      if (cards[i] === cards[j]) {\n        setMatched([...matched, i, j]);\n        setTimeout(() => setFlipped([]), 800);\n      } else {\n        setTimeout(() => setFlipped([]), 800);\n      }\n    }\n  }\n  function handleReset() {\n    setCards(shuffle([...symbols, ...symbols]));\n    setFlipped([]);\n    setMatched([]);\n    setMoves(0);\n  }\n  let status = matched.length === cards.length ? `You won in ${moves} moves!` : `Moves: ${moves}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Status, {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: cards.map((val, i) => /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => handleClick(i),\n        children: flipped.includes(i) || matched.includes(i) ? val : '?'\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(MemoryGame, \"vBCht8RjyJmzh2E+UR9i0EL5izg=\");\n_c4 = MemoryGame;\nexport default MemoryGame;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"Status\");\n$RefreshReg$(_c4, \"MemoryGame\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","Grid","div","_c","Card","button","_c2","Status","_c3","symbols","shuffle","array","arr","slice","i","length","j","Math","floor","random","MemoryGame","_s","cards","setCards","flipped","setFlipped","matched","setMatched","moves","setMoves","handleClick","idx","includes","newFlipped","m","setTimeout","handleReset","status","children","fileName","_jsxFileName","lineNumber","columnNumber","map","val","onClick","_c4","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Utils/Moneh/client/src/games/MemoryGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 60px);\r\n  grid-gap: 10px;\r\n  margin: 20px auto;\r\n`;\r\nconst Card = styled.button`\r\n  width: 60px;\r\n  height: 60px;\r\n  font-size: 2rem;\r\n  background: #fff;\r\n  border: 2px solid #2a3d66;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n  &:hover {\r\n    background: #e6eaf5;\r\n  }\r\n`;\r\nconst Status = styled.div`\r\n  margin: 10px 0;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst symbols = ['🍎','🍌','🍒','🍇','🍉','🍋','🍓','🍍'];\r\nfunction shuffle(array) {\r\n  let arr = array.slice();\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [arr[i], arr[j]] = [arr[j], arr[i]];\r\n  }\r\n  return arr;\r\n}\r\n\r\nconst MemoryGame = () => {\r\n  const [cards, setCards] = useState(() => shuffle([...symbols, ...symbols]));\r\n  const [flipped, setFlipped] = useState([]);\r\n  const [matched, setMatched] = useState([]);\r\n  const [moves, setMoves] = useState(0);\r\n\r\n  function handleClick(idx) {\r\n    if (flipped.length === 2 || flipped.includes(idx) || matched.includes(idx)) return;\r\n    const newFlipped = [...flipped, idx];\r\n    setFlipped(newFlipped);\r\n    if (newFlipped.length === 2) {\r\n      setMoves(m => m + 1);\r\n      const [i, j] = newFlipped;\r\n      if (cards[i] === cards[j]) {\r\n        setMatched([...matched, i, j]);\r\n        setTimeout(() => setFlipped([]), 800);\r\n      } else {\r\n        setTimeout(() => setFlipped([]), 800);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleReset() {\r\n    setCards(shuffle([...symbols, ...symbols]));\r\n    setFlipped([]);\r\n    setMatched([]);\r\n    setMoves(0);\r\n  }\r\n\r\n  let status = matched.length === cards.length ? `You won in ${moves} moves!` : `Moves: ${moves}`;\r\n\r\n  return (\r\n    <div>\r\n      <Status>{status}</Status>\r\n      <Grid>\r\n        {cards.map((val, i) => (\r\n          <Card key={i} onClick={() => handleClick(i)}>\r\n            {flipped.includes(i) || matched.includes(i) ? val : '?'}\r\n          </Card>\r\n        ))}\r\n      </Grid>\r\n      <button onClick={handleReset}>Restart</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemoryGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}